services:
  postgres-app:
    image: postgres:17-alpine
    container_name: postgres-db
    restart: on-failure:5 # mudança para atender ao exercício
    env_file:
      - ./server/.env          # centraliza senha no arquivo
    ports:
      - "127.0.0.1:5433:5432"   # Restringe acesso externo
    volumes:
      - db_postgres_data:/var/lib/postgresql/data
      - ./db/comandos.sql:/docker-entrypoint-initdb.d/comandos.sql
    networks:
      - minha-network
    healthcheck:  # mudança para atender ao exercício
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy: # mudança para atender ao exercício
      resources:
        limits:
          cpus: "0.50"
          memory: 512M
    security_opt: 
      - no-new-privileges:true  # mudança para atender ao exercício

  redis-app:
    image: redis:8-alpine
    container_name: redis-app
    restart: on-failure:5 # mudança para atender ao exercício
    # Expansão da senha só dentro do container (sem ${...} no YAML)
    command: ["sh", "-c", "exec redis-server --requirepass \"$$REDIS_PASSWORD\""]
    env_file:
      - ./server/.env          # centraliza credenciais no arquivo
    ports:
      - "127.0.0.1:6379:6379" # mudança para atender ao exercício
    volumes:
      - redis_data:/data
    networks:
      - minha-network
    healthcheck:  # mudança para atender ao exercício
      test: ["CMD-SHELL", "redis-cli -a \"$$REDIS_PASSWORD\" ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy: # mudança para atender ao exercício
      resources:
        limits:
          cpus: "0.25"
          memory: 256M
    security_opt: 
      - no-new-privileges:true  # mudança para atender ao exercício

  server-app:
    build:
      context: ./server
      dockerfile: Dockerfile.resposta
    container_name: server-app
    restart: on-failure:5 # mudança para atender ao exercício
    env_file:
    - ./server/.env    # apenas injeta, não copia
    networks:
      - minha-network
    depends_on:
      - postgres-app
      - redis-app
    volumes:
      - ./server:/usr/src/app
    command: npm run dev
    ports:
      - "127.0.0.1:3001:3000" # mudança para atender ao exercício
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 512M
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    security_opt: 
      - no-new-privileges:true

volumes:
  db_postgres_data:
  redis_data:

networks:
  minha-network:
    driver: bridge
